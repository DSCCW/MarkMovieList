/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  MovieDTO,
} from '../models';
import {
    MovieDTOFromJSON,
    MovieDTOToJSON,
} from '../models';

export interface GetTop10RevenueMoviesByYearRequest {
    year: number;
}

/**
 * 
 */
export class MovieListControllerApi extends runtime.BaseAPI {

    /**
     */
    async getAllMoviesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<MovieDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/movies/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MovieDTOFromJSON));
    }

    /**
     */
    async getAllMovies(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<MovieDTO>> {
        const response = await this.getAllMoviesRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getTop10RevenueMoviesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<MovieDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/movies/revenue`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MovieDTOFromJSON));
    }

    /**
     */
    async getTop10RevenueMovies(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<MovieDTO>> {
        const response = await this.getTop10RevenueMoviesRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getTop10RevenueMoviesByYearRaw(requestParameters: GetTop10RevenueMoviesByYearRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<MovieDTO>>> {
        if (requestParameters.year === null || requestParameters.year === undefined) {
            throw new runtime.RequiredError('year','Required parameter requestParameters.year was null or undefined when calling getTop10RevenueMoviesByYear.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/movies/revenue/{year}`.replace(`{${"year"}}`, encodeURIComponent(String(requestParameters.year))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MovieDTOFromJSON));
    }

    /**
     */
    async getTop10RevenueMoviesByYear(requestParameters: GetTop10RevenueMoviesByYearRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<MovieDTO>> {
        const response = await this.getTop10RevenueMoviesByYearRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
