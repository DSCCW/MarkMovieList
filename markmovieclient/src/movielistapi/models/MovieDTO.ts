/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MovieDTO
 */
export interface MovieDTO {
    /**
     * 
     * @type {number}
     * @memberof MovieDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof MovieDTO
     */
    movieTitle?: string;
    /**
     * 
     * @type {number}
     * @memberof MovieDTO
     */
    releaseYear?: number;
    /**
     * 
     * @type {string}
     * @memberof MovieDTO
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof MovieDTO
     */
    director?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof MovieDTO
     */
    actors?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof MovieDTO
     */
    runtime?: number;
    /**
     * 
     * @type {number}
     * @memberof MovieDTO
     */
    rating?: number;
    /**
     * 
     * @type {number}
     * @memberof MovieDTO
     */
    votes?: number;
    /**
     * 
     * @type {number}
     * @memberof MovieDTO
     */
    revenue?: number;
    /**
     * 
     * @type {number}
     * @memberof MovieDTO
     */
    metascore?: number;
}

/**
 * Check if a given object implements the MovieDTO interface.
 */
export function instanceOfMovieDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MovieDTOFromJSON(json: any): MovieDTO {
    return MovieDTOFromJSONTyped(json, false);
}

export function MovieDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MovieDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'movieTitle': !exists(json, 'movieTitle') ? undefined : json['movieTitle'],
        'releaseYear': !exists(json, 'releaseYear') ? undefined : json['releaseYear'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'director': !exists(json, 'director') ? undefined : json['director'],
        'actors': !exists(json, 'actors') ? undefined : json['actors'],
        'runtime': !exists(json, 'runtime') ? undefined : json['runtime'],
        'rating': !exists(json, 'rating') ? undefined : json['rating'],
        'votes': !exists(json, 'votes') ? undefined : json['votes'],
        'revenue': !exists(json, 'revenue') ? undefined : json['revenue'],
        'metascore': !exists(json, 'metascore') ? undefined : json['metascore'],
    };
}

export function MovieDTOToJSON(value?: MovieDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'movieTitle': value.movieTitle,
        'releaseYear': value.releaseYear,
        'description': value.description,
        'director': value.director,
        'actors': value.actors,
        'runtime': value.runtime,
        'rating': value.rating,
        'votes': value.votes,
        'revenue': value.revenue,
        'metascore': value.metascore,
    };
}

